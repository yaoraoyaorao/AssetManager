// <auto-generated />
using System;
using AssetManager.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManager.API.Migrations
{
    [DbContext(typeof(AssetManagerContext))]
    [Migration("20240401175402_InitDatbase")]
    partial class InitDatbase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("AssetManager.API.Context.Models.AssetPackage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuditStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Max")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<int>("Min")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<int>("Patch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<long>("TargetProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TargetProjectId");

                    b.ToTable("ResourcePackages");
                });

            modelBuilder.Entity("AssetManager.API.Context.Models.Platform", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("AssetManager.API.Context.Models.PlatformAsset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssetPath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("TargetAssetPackageId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TargetPlatformId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TargetAssetPackageId");

                    b.HasIndex("TargetPlatformId");

                    b.ToTable("PlatformAssets");
                });

            modelBuilder.Entity("AssetManager.API.Context.Models.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProjectItems");
                });

            modelBuilder.Entity("AssetManager.API.Context.Models.AssetPackage", b =>
                {
                    b.HasOne("AssetManager.API.Context.Models.Project", "TargetProject")
                        .WithMany("AssetPackages")
                        .HasForeignKey("TargetProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetProject");
                });

            modelBuilder.Entity("AssetManager.API.Context.Models.PlatformAsset", b =>
                {
                    b.HasOne("AssetManager.API.Context.Models.AssetPackage", "TargetAssetPackage")
                        .WithMany("PlatformAssets")
                        .HasForeignKey("TargetAssetPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManager.API.Context.Models.Platform", "TargetPlatform")
                        .WithMany()
                        .HasForeignKey("TargetPlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetAssetPackage");

                    b.Navigation("TargetPlatform");
                });

            modelBuilder.Entity("AssetManager.API.Context.Models.AssetPackage", b =>
                {
                    b.Navigation("PlatformAssets");
                });

            modelBuilder.Entity("AssetManager.API.Context.Models.Project", b =>
                {
                    b.Navigation("AssetPackages");
                });
#pragma warning restore 612, 618
        }
    }
}
